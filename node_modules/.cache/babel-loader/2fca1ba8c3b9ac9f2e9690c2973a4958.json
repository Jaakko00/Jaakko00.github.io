{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/src/Posts.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport PostForm from \"./PostForm\";\nimport { Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Posts = /*#__PURE__*/function (_React$Component) {\n  _inherits(Posts, _React$Component);\n\n  var _super = _createSuper(Posts);\n\n  function Posts(props) {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      posts: [],\n      showDelete: false\n    };\n    _this.addNewPost = _this.addNewPost.bind(_assertThisInitialized(_this));\n    _this.deletePost = _this.deletePost.bind(_assertThisInitialized(_this));\n    _this.showDeleteButton = _this.showDeleteButton.bind(_assertThisInitialized(_this));\n    _this.handleShowDeleteButton = _this.handleShowDeleteButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                axios.get(\"https://bullet-in-board.herokuapp.com/posts\").then(function (response) {\n                  _this2.setState({\n                    posts: response.data\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n    /**\n     * addNewPost adds a new post to the database\n     *\n     * After randomly deciding for a color, it creates a newPost with all the given information, and then sends that to the database\n     * @param {string} text\n     * @param {string} sender\n     * @param {string} title\n     */\n\n  }, {\n    key: \"addNewPost\",\n    value: function () {\n      var _addNewPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(text, sender, title) {\n        var _this3 = this;\n\n        var randomColor, create_time, color, newPost;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                randomColor = function _randomColor() {\n                  var randomnumber = Math.floor(Math.random() * (4 - 1 + 1)) + 1;\n\n                  if (randomnumber === 1) {\n                    return \"success\";\n                  }\n\n                  if (randomnumber === 2) {\n                    return \"danger\";\n                  }\n\n                  if (randomnumber === 3) {\n                    return \"warning\";\n                  } else {\n                    return \"info\";\n                  }\n                };\n\n                console.log(\"Adding post\");\n                /**\n                 * randomColor randomly chooses out of 4 bootstrap colors\n                 * @returns {string} color\n                 */\n\n                create_time = new Date().toISOString().slice(0, 10);\n                color = randomColor();\n                newPost = {\n                  content: text,\n                  create_time: create_time,\n                  sender: sender,\n                  title: title,\n                  color: color\n                };\n                console.log(newPost);\n                axios.post(\"https://bullet-in-board.herokuapp.com/posts\", newPost).catch(function (error) {\n                  console.log(error);\n                }).then(function (response) {\n                  console.log(\"Added new post\");\n                  axios.get(\"https://bullet-in-board.herokuapp.com/posts\").then(function (response) {\n                    _this3.setState({\n                      posts: response.data\n                    });\n                  }).catch(function (error) {\n                    console.log(error);\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function addNewPost(_x, _x2, _x3) {\n        return _addNewPost.apply(this, arguments);\n      }\n\n      return addNewPost;\n    }()\n    /**\n     * deletePost finds the id of the post given, and deletes it off the database and state\n     * @param {object} post\n     */\n\n  }, {\n    key: \"deletePost\",\n    value: function () {\n      var _deletePost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(post) {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                axios.delete(\"https://bullet-in-board.herokuapp.com/posts/\".concat(post.id)).then(function (response) {\n                  _this4.setState({\n                    posts: _this4.state.posts.filter(function (postToStay) {\n                      return postToStay.id !== post.id;\n                    })\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deletePost(_x4) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }()\n  }, {\n    key: \"handleShowDeleteButton\",\n    value: function handleShowDeleteButton() {\n      this.setState(function (_ref) {\n        var showDelete = _ref.showDelete;\n        return {\n          showDelete: !showDelete\n        };\n      });\n    }\n  }, {\n    key: \"showDeleteButton\",\n    value: function showDeleteButton() {\n      if (this.state.showDelete) {\n        return \"visible\";\n      } else {\n        return \"invisible\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var sortedPosts = this.state.posts.sort(function (a, b) {\n        return b.id - a.id;\n      });\n      var posts = sortedPosts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          delete: _this5.deletePost,\n          showDeleteButton: _this5.showDeleteButton\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, _this5);\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PostForm, {\n          post: this.addNewPost,\n          showDelete: this.handleShowDeleteButton,\n          showDeleteButton: this.showDeleteButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n\n  return Posts;\n}(React.Component);\n\nexport default Posts;","map":{"version":3,"sources":["/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/src/Posts.js"],"names":["React","axios","Post","PostForm","Row","Posts","props","state","posts","showDelete","addNewPost","bind","deletePost","showDeleteButton","handleShowDeleteButton","get","then","response","setState","data","catch","error","console","log","text","sender","title","randomColor","randomnumber","Math","floor","random","create_time","Date","toISOString","slice","color","newPost","content","post","delete","id","filter","postToStay","sortedPosts","sort","a","b","map","Component"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport PostForm from \"./PostForm\";\nimport { Row } from \"react-bootstrap\";\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [], showDelete: false };\n\n    this.addNewPost = this.addNewPost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.showDeleteButton = this.showDeleteButton.bind(this);\n    this.handleShowDeleteButton = this.handleShowDeleteButton.bind(this);\n  }\n\n  async componentDidMount() {\n    axios\n      .get(\"https://bullet-in-board.herokuapp.com/posts\")\n      .then((response) => {\n        this.setState({ posts: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  /**\n   * addNewPost adds a new post to the database\n   *\n   * After randomly deciding for a color, it creates a newPost with all the given information, and then sends that to the database\n   * @param {string} text\n   * @param {string} sender\n   * @param {string} title\n   */\n  async addNewPost(text, sender, title) {\n    console.log(\"Adding post\");\n\n    /**\n     * randomColor randomly chooses out of 4 bootstrap colors\n     * @returns {string} color\n     */\n    function randomColor() {\n      var randomnumber = Math.floor(Math.random() * (4 - 1 + 1)) + 1;\n      if (randomnumber === 1) {\n        return \"success\";\n      }\n      if (randomnumber === 2) {\n        return \"danger\";\n      }\n      if (randomnumber === 3) {\n        return \"warning\";\n      } else {\n        return \"info\";\n      }\n    }\n\n    let create_time = new Date().toISOString().slice(0, 10);\n    let color = randomColor();\n    let newPost = {\n      content: text,\n      create_time: create_time,\n      sender: sender,\n      title: title,\n      color: color,\n    };\n    console.log(newPost);\n    axios\n      .post(\"https://bullet-in-board.herokuapp.com/posts\", newPost)\n      .catch((error) => {\n        console.log(error);\n      })\n      .then((response) => {\n        console.log(\"Added new post\");\n        axios\n          .get(\"https://bullet-in-board.herokuapp.com/posts\")\n          .then((response) => {\n            this.setState({ posts: response.data });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  }\n\n  /**\n   * deletePost finds the id of the post given, and deletes it off the database and state\n   * @param {object} post\n   */\n  async deletePost(post) {\n    axios\n      .delete(`https://bullet-in-board.herokuapp.com/posts/${post.id}`)\n      .then((response) => {\n        this.setState({\n          posts: this.state.posts.filter(\n            (postToStay) => postToStay.id !== post.id\n          ),\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  handleShowDeleteButton() {\n    this.setState(({showDelete}) => ({ showDelete: !showDelete }));\n  }\n\n  showDeleteButton() {\n    if (this.state.showDelete) {\n      return \"visible\";\n    } else {\n      return \"invisible\";\n    }\n  }\n\n  render() {\n    let sortedPosts = this.state.posts.sort((a, b) => b.id - a.id);\n    let posts = sortedPosts.map((post) => (\n      <Post\n        key={post.id}\n        post={post}\n        delete={this.deletePost}\n        showDeleteButton={this.showDeleteButton}\n      ></Post>\n    ));\n    return (\n      <>\n        <PostForm\n          post={this.addNewPost}\n          showDelete={this.handleShowDeleteButton}\n          showDeleteButton={this.showDeleteButton}\n        ></PostForm>\n\n        <Row className=\"justify-content-center\">{posts}</Row>\n      </>\n    );\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}