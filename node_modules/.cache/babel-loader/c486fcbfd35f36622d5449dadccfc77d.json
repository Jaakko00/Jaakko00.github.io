{"ast":null,"code":"import _slicedToArray from \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/src/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Offcanvas, Navbar, Container, Nav } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar filter = require(\"leo-profanity\");\n\nfunction PostForm(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sender = _useState4[0],\n      setSender = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      disabled = _useState10[0],\n      setDisabled = _useState10[1];\n  /** onChangeContent sets the state of content with given value */\n\n\n  var onChangeContent = function onChangeContent(e) {\n    setContent(e.currentTarget.value);\n  };\n  /** onChangeSender sets the state of content with given value */\n\n\n  var onChangeSender = function onChangeSender(e) {\n    setSender(e.currentTarget.value);\n  };\n  /** onChangeTitle sets the state of content with given value */\n\n\n  var onChangeTitle = function onChangeTitle(e) {\n    setTitle(e.currentTarget.value);\n  };\n  /** onChangePassword sets the state of password with given value */\n\n\n  var onChangePassword = function onChangePassword(e) {\n    setPassword(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      expand: false,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          className: \"display-1\",\n          children: \"Bullet-in-Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex\",\n          style: {\n            width: \"20rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            disabled: true,\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"me-2\",\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: onChangePassword,\n            disabled: disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              if (password === \"admin\" || props.showDeleteButton() === \"visible\") {\n                props.showDelete();\n                setPassword(\"\");\n                setDisabled(false);\n              }\n\n              if (password === \"admin\" && props.showDeleteButton() === \"invisible\") {\n                setDisabled(true);\n              }\n            },\n            children: [props.showDeleteButton() === \"invisible\" && \"Login\", props.showDeleteButton() === \"visible\" && \"Logout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          children: \"New post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Offcanvas, {\n          id: \"offcanvasNavbar\",\n          \"aria-labelledby\": \"offcanvasNavbarLabel\",\n          placement: \"end\",\n          style: {\n            width: \"35rem\"\n          },\n          scroll: true,\n          backdrop: false,\n          children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n              id: \"offcanvasNavbarLabel\",\n              children: \"New post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              className: \"m-2\",\n              style: {\n                width: \"10rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"mb-3\",\n                type: \"text\",\n                placeholder: \"Title\",\n                value: title,\n                onChange: onChangeTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: \"m-2\",\n              style: {\n                width: \"30rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                placeholder: \"Text\",\n                value: content,\n                onChange: onChangeContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: \"m-2\",\n              style: {\n                width: \"10rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"mb-3\",\n                type: \"text\",\n                placeholder: \"From\",\n                value: sender,\n                onChange: onChangeSender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"m-2\",\n              variant: \"primary\",\n              type: \"submit\",\n              onClick: function onClick() {\n                if (content.length && title.length) {\n                  props.post( //filter.clean filters all profanity of a given string\n                  filter.clean(content), filter.clean(sender), filter.clean(title)) //After posting, the state is emptied to avoid doubleposting\n                  .then(setContent(\"\")).then(setSender(\"\")).then(setTitle(\"\"));\n                }\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PostForm, \"qWIvDk9dhlRL9lu80IkWeoETP7o=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/jaakko/JaakkoSaranpaa.fi/Jaakko00.github.io/src/PostForm.jsx"],"names":["React","useState","Button","Form","Offcanvas","Navbar","Container","Nav","filter","require","PostForm","props","content","setContent","sender","setSender","title","setTitle","password","setPassword","disabled","setDisabled","onChangeContent","e","currentTarget","value","onChangeSender","onChangeTitle","onChangePassword","width","showDeleteButton","showDelete","length","post","clean","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Offcanvas,\n  Navbar,\n  Container,\n  Nav,\n} from \"react-bootstrap\";\n\nvar filter = require(\"leo-profanity\");\n\nfunction PostForm(props) {\n  const [content, setContent] = useState(\"\");\n  const [sender, setSender] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [disabled, setDisabled] = useState(\"\");\n\n  /** onChangeContent sets the state of content with given value */\n  const onChangeContent = (e) => {\n    setContent(e.currentTarget.value);\n  };\n\n  /** onChangeSender sets the state of content with given value */\n  const onChangeSender = (e) => {\n    setSender(e.currentTarget.value);\n  };\n\n  /** onChangeTitle sets the state of content with given value */\n  const onChangeTitle = (e) => {\n    setTitle(e.currentTarget.value);\n  };\n\n  /** onChangePassword sets the state of password with given value */\n  const onChangePassword = (e) => {\n    setPassword(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand={false}>\n        <Container fluid>\n          <Navbar.Brand className=\"display-1\">\n            Bullet-in-Board\n          </Navbar.Brand>\n\n          <Form className=\"d-flex\" style={{ width: \"20rem\" }}>\n            <Nav.Link disabled>Admin</Nav.Link>\n            <Form.Control\n              className=\"me-2\"\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={onChangePassword}\n              disabled={disabled}\n            />\n            <Button\n              onClick={() => {\n                if (\n                  password === \"admin\" ||\n                  props.showDeleteButton() === \"visible\"\n                ) {\n                  props.showDelete();\n                  setPassword(\"\");\n                  setDisabled(false);\n                }\n                if (\n                  password === \"admin\" &&\n                  props.showDeleteButton() === \"invisible\"\n                ) {\n                  setDisabled(true);\n                }\n              }}\n            >\n              {props.showDeleteButton() === \"invisible\" && \"Login\"}\n              {props.showDeleteButton() === \"visible\" && \"Logout\"}\n            </Button>\n          </Form>\n\n          <Navbar.Toggle>New post</Navbar.Toggle>\n          <Navbar.Offcanvas\n            id=\"offcanvasNavbar\"\n            aria-labelledby=\"offcanvasNavbarLabel\"\n            placement=\"end\"\n            style={{ width: \"35rem\" }}\n            scroll={true}\n            backdrop={false}\n          >\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title id=\"offcanvasNavbarLabel\">\n                New post\n              </Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              <Form className=\"m-2\" style={{ width: \"10rem\" }}>\n                <Form.Control\n                  className=\"mb-3\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={title}\n                  onChange={onChangeTitle}\n                />\n              </Form>\n\n              <Form className=\"m-2\" style={{ width: \"30rem\" }}>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"Text\"\n                  value={content}\n                  onChange={onChangeContent}\n                />\n              </Form>\n\n              <Form className=\"m-2\" style={{ width: \"10rem\" }}>\n                <Form.Control\n                  className=\"mb-3\"\n                  type=\"text\"\n                  placeholder=\"From\"\n                  value={sender}\n                  onChange={onChangeSender}\n                />\n              </Form>\n\n              <Button\n                className=\"m-2\"\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={() => {\n                  if (content.length && title.length) {\n                    props\n                      .post(\n                        //filter.clean filters all profanity of a given string\n                        filter.clean(content),\n                        filter.clean(sender),\n                        filter.clean(title)\n                      )\n                      //After posting, the state is emptied to avoid doubleposting\n                      .then(setContent(\"\"))\n                      .then(setSender(\"\"))\n                      .then(setTitle(\"\"));\n                  }\n                }}\n              >\n                Submit\n              </Button>\n            </Offcanvas.Body>\n          </Navbar.Offcanvas>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}