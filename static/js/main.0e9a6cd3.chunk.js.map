{"version":3,"sources":["Post.jsx","PostForm.jsx","Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","Card","bg","post","color","text","className","style","width","Body","Title","title","Subtitle","create_time","Text","content","sender","Button","showDeleteButton","variant","onClick","delete","filter","require","PostForm","useState","setContent","setSender","setTitle","password","setPassword","disabled","setDisabled","Navbar","expand","Container","fluid","Brand","Form","Nav","Link","Control","type","value","placeholder","onChange","e","currentTarget","showDelete","Toggle","Offcanvas","id","placement","scroll","backdrop","Header","closeButton","as","rows","length","clean","then","Posts","state","posts","addNewPost","bind","deletePost","handleShowDeleteButton","a","axios","get","response","setState","data","catch","error","console","log","randomColor","randomnumber","Math","floor","random","Date","toISOString","slice","newPost","postToStay","this","sort","b","map","Row","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e9a6cd3.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Post(props) {\n\n\n  return (\n    <Card\n      bg={props.post.color}\n      text=\"white\"\n      className=\"m-2\"\n      style={{ width: \"30rem\" }}\n    >\n      <Card.Body>\n        <Card.Title className=\"lead\">{props.post.title} </Card.Title>\n        <Card.Subtitle className=\"mb-2 text-light\">\n          {props.post.create_time}\n        </Card.Subtitle>\n        <Card.Text className=\"text-white\">{props.post.content}</Card.Text>\n        <Card.Subtitle className=\"mb-2 text-light\">\n          {/*If the input of sender is empty, it outputs \"-Anonymous\" */}\n          {props.post.sender && \"-\" + props.post.sender}\n          {!props.post.sender && \"-Anonymous\"}\n        </Card.Subtitle>\n        <Button\n          className={props.showDeleteButton()}\n          variant=\"dark\"\n          color=\"white\"\n          onClick={() => props.delete(props.post)}\n        >\n          Delete\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Post;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Offcanvas,\n  Navbar,\n  Container,\n  Nav,\n} from \"react-bootstrap\";\n\nvar filter = require(\"leo-profanity\");\n\nfunction PostForm(props) {\n  const [content, setContent] = useState(\"\");\n  const [sender, setSender] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [disabled, setDisabled] = useState(\"\");\n\n  /** onChangeContent sets the state of content with given value */\n  const onChangeContent = (e) => {\n    setContent(e.currentTarget.value);\n  };\n\n  /** onChangeSender sets the state of content with given value */\n  const onChangeSender = (e) => {\n    setSender(e.currentTarget.value);\n  };\n\n  /** onChangeTitle sets the state of content with given value */\n  const onChangeTitle = (e) => {\n    setTitle(e.currentTarget.value);\n  };\n\n  /** onChangePassword sets the state of password with given value */\n  const onChangePassword = (e) => {\n    setPassword(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand={false}>\n        <Container fluid>\n          <Navbar.Brand className=\"display-1\">\n            Bullet-in-Board\n          </Navbar.Brand>\n\n          <Form className=\"d-flex\" style={{ width: \"20rem\" }}>\n            <Nav.Link disabled>Admin</Nav.Link>\n            <Form.Control\n              className=\"me-2\"\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={onChangePassword}\n              disabled={disabled}\n            />\n            <Button\n              onClick={() => {\n                if (\n                  password === \"admin\" ||\n                  props.showDeleteButton() === \"visible\"\n                ) {\n                  props.showDelete();\n                  setPassword(\"\");\n                  setDisabled(false);\n                }\n                if (\n                  password === \"admin\" &&\n                  props.showDeleteButton() === \"invisible\"\n                ) {\n                  setDisabled(true);\n                }\n              }}\n            >\n              {props.showDeleteButton() === \"invisible\" && \"Login\"}\n              {props.showDeleteButton() === \"visible\" && \"Logout\"}\n            </Button>\n          </Form>\n\n          <Navbar.Toggle>New post</Navbar.Toggle>\n          <Navbar.Offcanvas\n            id=\"offcanvasNavbar\"\n            aria-labelledby=\"offcanvasNavbarLabel\"\n            placement=\"end\"\n            style={{ width: \"35rem\" }}\n            scroll={true}\n            backdrop={false}\n          >\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title id=\"offcanvasNavbarLabel\">\n                New post\n              </Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              <Form className=\"m-2\" style={{ width: \"10rem\" }}>\n                <Form.Control\n                  className=\"mb-3\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={title}\n                  onChange={onChangeTitle}\n                />\n              </Form>\n\n              <Form className=\"m-2\" style={{ width: \"30rem\" }}>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"Text\"\n                  value={content}\n                  onChange={onChangeContent}\n                />\n              </Form>\n\n              <Form className=\"m-2\" style={{ width: \"10rem\" }}>\n                <Form.Control\n                  className=\"mb-3\"\n                  type=\"text\"\n                  placeholder=\"From\"\n                  value={sender}\n                  onChange={onChangeSender}\n                />\n              </Form>\n\n              <Button\n                className=\"m-2\"\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={() => {\n                  if (content.length && title.length) {\n                    props\n                      .post(\n                        //filter.clean filters all profanity of a given string\n                        filter.clean(content),\n                        filter.clean(sender),\n                        filter.clean(title)\n                      )\n                      //After posting, the state is emptied to avoid doubleposting\n                      .then(setContent(\"\"))\n                      .then(setSender(\"\"))\n                      .then(setTitle(\"\"));\n                  }\n                }}\n              >\n                Submit\n              </Button>\n            </Offcanvas.Body>\n          </Navbar.Offcanvas>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default PostForm;\n","import \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport PostForm from \"./PostForm\";\nimport { Row } from \"react-bootstrap\";\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [], showDelete: false };\n\n    this.addNewPost = this.addNewPost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.showDeleteButton = this.showDeleteButton.bind(this);\n    this.handleShowDeleteButton = this.handleShowDeleteButton.bind(this);\n  }\n\n  async componentDidMount() {\n    axios\n      .get(\"https://bullet-in-board.herokuapp.com/posts\")\n      .then((response) => {\n        this.setState({ posts: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  /**\n   * addNewPost adds a new post to the database\n   *\n   * After randomly deciding for a color, it creates a newPost with all the given information, and then sends that to the database\n   * @param {string} text\n   * @param {string} sender\n   * @param {string} title\n   */\n  async addNewPost(text, sender, title) {\n    console.log(\"Adding post\");\n\n    /**\n     * randomColor randomly chooses out of 4 bootstrap colors\n     * @returns {string} color\n     */\n    function randomColor() {\n      var randomnumber = Math.floor(Math.random() * (4 - 1 + 1)) + 1;\n      if (randomnumber === 1) {\n        return \"success\";\n      }\n      if (randomnumber === 2) {\n        return \"danger\";\n      }\n      if (randomnumber === 3) {\n        return \"warning\";\n      } else {\n        return \"info\";\n      }\n    }\n\n    let create_time = new Date().toISOString().slice(0, 10);\n    let color = randomColor();\n    let newPost = {\n      content: text,\n      create_time: create_time,\n      sender: sender,\n      title: title,\n      color: color,\n    };\n    console.log(newPost);\n    axios\n      .post(\"https://bullet-in-board.herokuapp.com/posts\", newPost)\n      .catch((error) => {\n        console.log(error);\n      })\n      .then((response) => {\n        console.log(\"Added new post\");\n        axios\n          .get(\"https://bullet-in-board.herokuapp.com/posts\")\n          .then((response) => {\n            this.setState({ posts: response.data });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  }\n\n  /**\n   * deletePost finds the id of the post given, and deletes it off the database and state\n   * @param {object} post\n   */\n  async deletePost(post) {\n    axios\n      .delete(`https://bullet-in-board.herokuapp.com/posts/${post.id}`)\n      .then((response) => {\n        this.setState({\n          posts: this.state.posts.filter(\n            (postToStay) => postToStay.id !== post.id\n          ),\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  handleShowDeleteButton() {\n    this.setState(({showDelete}) => ({ showDelete: !showDelete }));\n  }\n\n  showDeleteButton() {\n    if (this.state.showDelete) {\n      return \"visible\";\n    } else {\n      return \"invisible\";\n    }\n  }\n\n  render() {\n    let sortedPosts = this.state.posts.sort((a, b) => b.id - a.id);\n    let posts = sortedPosts.map((post) => (\n      <Post\n        key={post.id}\n        post={post}\n        delete={this.deletePost}\n        showDeleteButton={this.showDeleteButton}\n      ></Post>\n    ));\n    return (\n      <>\n        <PostForm\n          post={this.addNewPost}\n          showDelete={this.handleShowDeleteButton}\n          showDeleteButton={this.showDeleteButton}\n        ></PostForm>\n\n        <Row className=\"justify-content-center\">{posts}</Row>\n      </>\n    );\n  }\n}\n\nexport default Posts;\n","import \"./App.css\";\nimport React from \"react\";\nimport Posts from \"./Posts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nclass App extends React.Component {\n  render() {\n    return (\n      <Posts></Posts>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}